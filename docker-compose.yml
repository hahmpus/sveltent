version: '3.8'
volumes:
  mongo-data:
    name: mongo-data
    driver: local
  mongo-config:
    name: mongo-config
    driver: local
services:
  mongo1:
    image: mongo
    container_name: mongo1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
#      start_interval: 1s
      retries: 30
    networks:
      - net1
    volumes:
      - "mongo-data:/data/db"
      - "mongo-config:/data/configdb"
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      #ME_CONFIG_MONGODB_ADMINUSERNAME: root
      #ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://host.docker.internal:27017/?replicaSet=rs0
    networks:
      - net1
    depends_on:
      - mongo1
networks:
  net1:
    name: net1
    driver: bridge